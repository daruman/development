# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  # config.vm.box = "centos70"
    config.vm.box = "centos70"
    config.vm.box_url = "https://f0fff3908f081cb6461b407be80daf97f07ac418.googledrive.com/host/0BwtuV7VyVTSkUG1PM3pCeDJ4dVE/centos7.box"
    config.vm.hostname = "develop.local"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 22, host: 2002, id: "ssh"
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.43.60"
  # config.vm.network :public_network
    config.vm.network :private_network, ip: "192.168.43.57"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
    config.ssh.forward_agent = true

    # dirは以下をapacheのドキュメントルートにする場合があるので777
    # ただし対象ディレクトリ配下にansibleのインベントリファイルを置くので、ファイルには実行権限を付けない
    config.vm.synced_folder "./", "/share", :owner => 'vagrant',  :group => 'vagrant', mount_options: ['dmode=777','fmode=755']


    config.vm.provider :virtualbox do |v|
        # virtualboxのGUI上の名前変更
        v.name = "develop.local"
        # 割り当てメモリ変更
        v.customize ["modifyvm", :id, "--memory", 1024]
    end


    # Ansible provisioning (you need to have ansible installed)
    config.vm.provision :ansible do |ansible|
        ansible.playbook = 'ansible/site.yml'
        ansible.inventory_path = "ansible/local"
        ansible.extra_vars = { ansible_ssh_user: 'vagrant' }

        # debug
        # ansible.verbose = "vvvv"

        #ansible.limit = 'all'
        #ansible.inventory_path = ".vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory"
    end
end
